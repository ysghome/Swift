import UIKit
//非明确的指定 元组的数据类型
var a = (1,15,16.5,"hello",true)
print(a)
//明确指定元组中的数据类型
var b:(Int,String) = (10,"Swift")
print(b)

//下标取值
print(b.0)

//定义一个空元组
//var c = ()
//print(c)
//定义了值 就不能为空
//var d:(Int) = ()

a.0 = 4
//值类型拷贝
/**
    值类型
 什么样的变量是值类型呢？看值类型的特点吧
 1.值类型变量都存储在堆栈中。2.访问值类型变量时，一般都是直接访问其实例。
 3.每个值类型变量都有自己的数据副本，因此对一个值类型的变量的操作不会影响其他的变量。
 4.复制值类型变量时，复制的是变量的值，而不是变量的地址。
 5.值类型变量不能为null，必须具有一个确定的值。
     引用类型
 1.必须在托管堆中为引用类型变量分配内存。2.必须使用new关键字来创建引用类型变量。
 3.在托管堆中分配的每个对象都有与之相关联的附加成员，这些成员必须被初始化。
 4.引用类型变量是由垃圾回收机制来管理的。
 5.多个引用类型变量都可以引用同一个对象，这种情形下，对一个变量的操作会影响另一个变量所引用的同一对象。
 6.引用类型被赋值之前的值都是null。
 */
var c = a
c.0 = 20

print(a,c)

//通过名称取值
var d = (name1:"hello",name2:true)
print(d.name1)

var e:(name1:Int,name2:String) = (100,"hello")
print(e.name1,e.name2)

//通过简洁语法定义元组
let (name1,name2) = ("swift",1.5)
print(name1,name2)
//_表示忽略当前这个位置的值
var (_,_,name3) = (1,2,"hello")
print(name3)
